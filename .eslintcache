[{"F:\\ecommerc\\Frontend\\src\\index.js":"1","F:\\ecommerc\\Frontend\\src\\StateProvider.js":"2","F:\\ecommerc\\Frontend\\src\\App.js":"3","F:\\ecommerc\\Frontend\\src\\reducer.js":"4","F:\\ecommerc\\Frontend\\src\\reportWebVitals.js":"5","F:\\ecommerc\\Frontend\\src\\components\\Mainpage\\Mainpage.js":"6","F:\\ecommerc\\Frontend\\src\\components\\Header\\Header.js":"7","F:\\ecommerc\\Frontend\\src\\components\\Login\\Login.js":"8","F:\\ecommerc\\Frontend\\src\\components\\Register\\Register.js":"9","F:\\ecommerc\\Frontend\\src\\components\\Search\\Search.js":"10","F:\\ecommerc\\Frontend\\src\\components\\ProductsList\\ProductsList.js":"11","F:\\ecommerc\\Frontend\\src\\components\\ShoppingCart\\ShoppingCart.js":"12","F:\\ecommerc\\Frontend\\src\\components\\Orderplaced\\OrderPlaced.js":"13","F:\\ecommerc\\Frontend\\src\\components\\Orders\\Order.js":"14","F:\\ecommerc\\Frontend\\src\\components\\ShoppingCart\\ShoppingItem.js":"15","F:\\ecommerc\\Frontend\\src\\components\\Orders\\OrderSingleItem.js":"16","F:\\ecommerc\\Frontend\\src\\components\\Products\\Products.js":"17"},{"size":689,"mtime":1611821048127,"results":"18","hashOfConfig":"19"},{"size":367,"mtime":1611821071106,"results":"20","hashOfConfig":"19"},{"size":4190,"mtime":1611816673896,"results":"21","hashOfConfig":"19"},{"size":1534,"mtime":1611816581934,"results":"22","hashOfConfig":"19"},{"size":362,"mtime":1611815794136,"results":"23","hashOfConfig":"19"},{"size":1350,"mtime":1611820072422,"results":"24","hashOfConfig":"19"},{"size":4091,"mtime":1611818245438,"results":"25","hashOfConfig":"19"},{"size":1822,"mtime":1611817180908,"results":"26","hashOfConfig":"19"},{"size":3170,"mtime":1611821031756,"results":"27","hashOfConfig":"19"},{"size":1492,"mtime":1611820368442,"results":"28","hashOfConfig":"19"},{"size":1917,"mtime":1611820299001,"results":"29","hashOfConfig":"19"},{"size":7122,"mtime":1611816400829,"results":"30","hashOfConfig":"19"},{"size":1051,"mtime":1611820115145,"results":"31","hashOfConfig":"19"},{"size":1375,"mtime":1611820199645,"results":"32","hashOfConfig":"19"},{"size":1135,"mtime":1611815796952,"results":"33","hashOfConfig":"19"},{"size":3566,"mtime":1611815795648,"results":"34","hashOfConfig":"19"},{"size":889,"mtime":1611820039413,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1156mn4",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"43"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"43"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"43"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"43"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"43"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"43"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"43"},"F:\\ecommerc\\Frontend\\src\\index.js",[],"F:\\ecommerc\\Frontend\\src\\StateProvider.js",[],"F:\\ecommerc\\Frontend\\src\\App.js",["81","82","83","84","85"],"import \"./App.css\";\nimport Header from \"./components/Header/Header\";\nimport Mainpage from \"./components/Mainpage/Mainpage\";\nimport Register from \"./components/Register/Register\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Login from \"./components/Login/Login\";\nimport ProductsList from \"./components/ProductsList/ProductsList\";\nimport Search from \"./components/Search/Search\";\nimport Pagination from \"react-js-pagination\";\nimport { useState, useEffect } from \"react\";\nimport { useStateValue } from \"./StateProvider\";\nimport axios from \"axios\";\nimport ShoppingCart from \"./components/ShoppingCart/ShoppingCart\";\nimport Order from \"./components/Orders/Order\";\nimport OrderPlaced from \"./components/Orderplaced/OrderPlaced\";\n\nfunction App() {\n  const [{ apiKey, products, user, basket }, dispatch] = useStateValue();\n  const [productJSON, setProductsJSON] = useState([]);\n  const [totalProducts, setTotalProducts] = useState();\n\n  useEffect(() => {\n    setActivePage(1);\n    const loggedInUser = localStorage.getItem(\"user\");\n    if (loggedInUser) {\n      const foundUser = JSON.parse(loggedInUser);\n      dispatch({\n        type: \"SET_USER\",\n        user: foundUser,\n      });\n    }\n    const productRequest = axios.post(`${apiKey}/get_products`, {\n      page: activePage,\n    });\n    const totalProducts = axios.get(`${apiKey}/total_products`);\n\n    axios.all([productRequest, totalProducts]).then(\n      axios.spread((...responses) => {\n        setProductsJSON(responses[0].data);\n        setTotalProducts(responses[1].data);\n      })\n    );\n  }, []);\n\n  useEffect(() => {\n    const cartProducts = axios\n      .post(`${apiKey}/get_cart_products`, {\n        user: user?.Email,\n      })\n      .then((res) => {\n        dispatch({\n          type: \"ADD_MULTIPLE_BASKET\",\n          basket: res.data,\n        });\n      });\n  }, [user]);\n\n  useEffect(() => {\n    if (products !== null || products !== undefined) {\n      setProductsJSON(products);\n    }\n  }, [products]);\n  const [activePage, setActivePage] = useState(1);\n  const changePagination = (pageNumber) => {\n    console.log(pageNumber);\n    setActivePage(pageNumber);\n    const newProductRequest = axios\n      .post(`${apiKey}/get_products`, {\n        page: pageNumber,\n      })\n      .then((res) => {\n        setProductsJSON(res.data);\n      });\n  };\n\n  return (\n    <Router>\n      <div className=\"app\">\n        <Switch>\n          <Route path=\"/user_orders\">\n            <Header />\n            <Order />\n          </Route>\n          <Route path=\"/your_cart\">\n            <Header />\n            <ShoppingCart />\n          </Route>\n          <Route path=\"/products\">\n            <Header />\n            <br></br>\n            <Search />\n            \n            \n            {productJSON.map((each) => {\n              return (\n                <ProductsList\n                  key={each.Prod_id}\n                  Prod_id={each.Prod_id}\n                  Categories_name={each.Categories_name}\n                  Prod_img_url={each.Prod_img_url}\n                  Prod_name={each.Prod_name}\n                  Prod_price={each.Prod_price}\n                  Prod_rating={each.Prod_rating}\n                  Prod_specs={each.Prod_specs}\n                />\n              );\n            })}\n            <Pagination\n              className=\"pagination\"\n              itemClass=\"page-item\"\n              linkClass=\"page-link\"\n              activePage={activePage}\n              itemsCountPerPage={10}\n              totalItemsCount={totalProducts === undefined ? 10 : totalProducts}\n              onChange={changePagination.bind(this)}\n              pageRangeDisplayed={15}\n            />\n        \n          </Route>\n\n          <Route path=\"/user_login\">\n            <Header />\n            <Login />\n          </Route>\n\n          <Route path=\"/user_registration\">\n            <Header />\n            <Register />\n          </Route>\n\n          <Route path=\"/order_placed_page\">\n            <Header />\n            <OrderPlaced />\n          </Route>\n\n          <Route path=\"/\">\n            <Header />\n            <Mainpage />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n",["86","87"],"F:\\ecommerc\\Frontend\\src\\reducer.js",["88"],"export const initialState = {\n  basket: [],\n  user: null,\n  apiKey: \"http://localhost:5000\",\n  products: [],\n};\n\nexport const CalculateTotal = (basket) => {\n  let sum = 0;\n  basket.map((item) => {\n    sum = sum + parseFloat(item?.Prod_price);\n  });\n  return sum;\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_PRODUCTS\":\n      return {\n        ...state,\n        products: action.products,\n      };\n\n    case \"INSERT_SEARCH\":\n      return {\n        ...state,\n        searchValue: action.searchValue,\n      };\n\n    case \"ADD_TO_BASKET\":\n      return {\n        ...state,\n        basket: [...state.basket, action.basket],\n      };\n\n    case \"ADD_MULTIPLE_BASKET\":\n      return {\n        ...state,\n        basket: action.basket,\n      };\n\n    case \"REMOVE_FROM_BASKET\":\n      const index = state.basket.findIndex(\n        (BasketItem) => BasketItem.UUID === action.id\n      );\n      let newBasket = [...state.basket];\n      if (index >= 0) {\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(\n          `Cant remove product (id: ${action.id}) as its not in basket`\n        );\n      }\n      return {\n        ...state,\n        basket: newBasket,\n      };\n\n    case \"SET_USER\":\n      return {\n        ...state,\n        user: action.user,\n      };\n\n    case \"REMOVE_USER\":\n      return {\n        ...state,\n        user: null,\n      };\n    case \"EMPTY_BASKET\":\n      return {\n        ...state,\n        basket: [],\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","F:\\ecommerc\\Frontend\\src\\reportWebVitals.js",[],"F:\\ecommerc\\Frontend\\src\\components\\Mainpage\\Mainpage.js",["89","90","91"],"import React, { useState, useEffect } from \"react\";\nimport Search from \"../Search/Search\";\nimport Products from \"../Products/Products\";\nimport axios from \"axios\";\nimport { Card, Row, Col } from \"react-bootstrap\";\nimport { useStateValue } from \"../../StateProvider\";\nfunction Mainpage() {\n  const [latestProd, setLatestProd] = useState([]);\n  const [{ apiKey }, dispatch] = useStateValue();\n\n  useEffect(() => {\n    axios.get(`${apiKey}/get_latest`).then((res) => {\n      setLatestProd(res.data);\n    });\n  }, []);\n\n  return (\n    <div>\n      \n        <Search pageValue={1} />\n        <br></br>\n\n        <div className=\"container\">\n          <h4>Latest Products</h4>\n          <Row>\n            {latestProd.map((each) => {\n              return (\n                <Col lg={3}>\n                  <Products\n                    key={each.Prod_id}\n                    Prod_id={each.Prod_id}\n                    Categories_name={each.Categories_name}\n                    Prod_img_url={each.Prod_img_url}\n                    Prod_name={each.Prod_name}\n                    Prod_price={each.Prod_price}\n                    Prod_rating={each.Prod_rating}\n                    Prod_specs={each.Prod_specs}\n                  />\n                </Col>\n              );\n            })}\n          </Row>\n        </div>\n    \n    </div>\n  );\n}\n\nexport default Mainpage;\n","F:\\ecommerc\\Frontend\\src\\components\\Header\\Header.js",["92"],"import React, { useEffect, useState } from \"react\";\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHome, faShoppingCart } from \"@fortawesome/free-solid-svg-icons\";\nimport { useStateValue } from \"../../StateProvider\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Header() {\n  const [{ user, apiKey, basket }, dispatch] = useStateValue();\n  const [categories, setCategories] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    axios.get(`${apiKey}/get_categories`).then((res) => {\n      setCategories(res.data);\n    });\n  }, []);\n\n  const getCategories = (e) => {\n    axios\n      .post(`${apiKey}/get_products_by_category`, {\n        cat_name: categories[e].Categories_name,\n      })\n      .then((res) => {\n        console.log(res.data);\n        history.replace(\"/products\");\n        dispatch({\n          type: \"SET_PRODUCTS\",\n          products: res.data,\n        });\n      });\n  };\n\n  const handleLogout = (e) => {\n    e.preventDefault();\n    dispatch({\n      type: \"REMOVE_USER\",\n    });\n    localStorage.removeItem(\"user\");\n  };\n\n  return (\n    <div style={{ width: \"100%\" }} className=\"maxWidth\">\n      <Navbar\n        collapseOnSelect\n        expand=\"lg\"\n        variant=\"dark\"\n        bg=\"dark\"\n      >\n        <div className=\"container\">\n          <Navbar.Brand as={NavLink} to=\"/\" className=\"brandName\">\n            E-Commerce\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            \n              <Nav className=\"ml-auto\">\n                <Nav.Link as={NavLink} to=\"/\">\n                  Home{\" \"}\n                  <FontAwesomeIcon size=\"xs\" icon={faHome}></FontAwesomeIcon>\n                </Nav.Link>\n                <Nav.Link as={NavLink} to=\"/products\">\n                  Products\n                </Nav.Link>\n                <NavDropdown alignRight title={\"Categories\"}>\n                  {categories.map((each, index) => {\n                    return (\n                      <NavDropdown.Item\n                        onClick={(e) => {\n                          e.preventDefault();\n                          getCategories(index);\n                        }}\n                        key={each.Categories_name}\n                      >\n                        {each.Categories_name}\n                      </NavDropdown.Item>\n                    );\n                  })}\n                </NavDropdown>\n                <Nav.Link as={NavLink} to=\"/user_orders\">\n                  Your Orders\n                </Nav.Link>\n              </Nav>\n\n              {user === null ? (\n                <Nav className=\"navbarLinks\">\n                  <Nav.Link as={NavLink} to=\"/user_registration\">\n                    Register\n                  </Nav.Link>\n                  <Nav.Link as={NavLink} to=\"/user_login\">\n                    Login\n                  </Nav.Link>\n                </Nav>\n              ) : (\n                <Nav className=\"navbarLinks\">\n                  <Nav.Link as={NavLink} to=\"/your_cart\">\n                    Cart <FontAwesomeIcon icon={faShoppingCart} /> {\"   \"}\n                    {basket.length}\n                  </Nav.Link>\n                  <NavDropdown title={\"User\"}>\n                    <NavDropdown.Item>\n                      Logged in as: <br></br>\n                      <strong>{user?.Name}</strong>\n                    </NavDropdown.Item>\n                    <NavDropdown.Item>{user?.Phone}</NavDropdown.Item>\n                    <NavDropdown.Divider></NavDropdown.Divider>\n                    <NavDropdown.Divider></NavDropdown.Divider>\n                    <NavDropdown.Item onClick={handleLogout}>\n                      Logout\n                    </NavDropdown.Item>\n                  </NavDropdown>\n                </Nav>\n              )}\n           \n          </Navbar.Collapse>\n        </div>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default Header;\n","F:\\ecommerc\\Frontend\\src\\components\\Login\\Login.js",[],"F:\\ecommerc\\Frontend\\src\\components\\Register\\Register.js",["93"],"F:\\ecommerc\\Frontend\\src\\components\\Search\\Search.js",["94","95","96"],"import React, { useState, useEffect } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport { useStateValue } from \"../../StateProvider\";\nimport axios from \"axios\";\nfunction Search(props) {\n  const [{ apiKey, products }, dispatch] = useStateValue();\n  const history = useHistory();\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    if (props.pageValue === 1) {\n      history.replace(`/products`);\n    } else {\n      \n\n      if (searchValue.length === 0) {\n        dispatch({\n          type: \"SET_PRODUCTS\",\n          products: [],\n        });\n      } else {\n        axios\n          .post(`${apiKey}/search_products`, { prodname: searchValue })\n          .then((res) => {\n            console.log(res.data);\n            dispatch({\n              type: \"SET_PRODUCTS\",\n              products: res.data,\n            });\n          });\n      }\n    }\n  };\n\n  return (\n    <div className=\"search container\">\n      <Form style={{ display: \"flex\", flexGrow: 1 }}>\n        <Form.Control\n          className=\"search__searchInput\"\n          type=\"text\"\n          placeholder=\"Search\"\n          onChange={(e) => setSearchValue(e.target.value)}\n        />\n        <button\n          type=\"submit\"\n          onClick={handleSearch}\n          style={{ background: \"none\", border: \"none\" }}\n        >\n          \n        </button>\n      </Form>\n    </div>\n  );\n}\n\nexport default Search;\n","F:\\ecommerc\\Frontend\\src\\components\\ProductsList\\ProductsList.js",["97","98","99","100"],"F:\\ecommerc\\Frontend\\src\\components\\ShoppingCart\\ShoppingCart.js",["101"],"import React, { useState, useEffect } from \"react\";\nimport { Button, Col, Form, Row, Table } from \"react-bootstrap\";\nimport { useStateValue } from \"../../StateProvider\";\nimport \"./ShoppingCartStyles.css\";\nimport ShoppingItem from \"./ShoppingItem\";\nimport CurrencyFormat from \"react-currency-format\";\nimport { CalculateTotal } from \"../../reducer\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\n\nfunction ShoppingCart() {\n  const [{ basket, apiKey, user }, dispatch] = useStateValue();\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [pinCode, setPincode] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [addressData, setAddressData] = useState();\n  const history = useHistory();\n  \n\n  useEffect(() => {\n    axios\n      .post(`${apiKey}/recent_address`, { user: user?.Email })\n      .then((res) => {\n        setAddressData(res.data[0]);\n      });\n  }, [user]);\n\n  const handleGetDefaultAddress = (e) => {\n    e.preventDefault();\n    setFirstName(addressData?.First_name);\n    setLastName(addressData?.Last_name);\n    setAddress(addressData?.address);\n    setCity(addressData?.City);\n    setState(addressData?.State);\n    setPincode(addressData?.Pincode);\n    setPhone(addressData?.Phone);\n  };\n\n  const handleOrderNow = (e) => {\n    if (\n      firstName.length <= 3 ||\n      lastName.length <= 3 ||\n      address.length <= 3 ||\n      city.length <= 3 ||\n      state.length <= 3 ||\n      pinCode.length <= 3 ||\n      phone.length <= 3\n    ) {\n    } else {\n      e.preventDefault();\n      if (user) {\n        axios\n          .post(`${apiKey}/place_orders`, {\n            user: user.Email,\n            basket: basket,\n            firstName: firstName,\n            lastName: lastName,\n            address: address,\n            city: city,\n            state: state,\n            pinCode: pinCode,\n            phone: phone,\n          })\n          .then((res) => {\n            if (res) {\n              dispatch({\n                type: \"EMPTY_BASKET\",\n              });\n              axios\n                .post(`${apiKey}/delete_all_cart`, { user: user?.Email })\n                .then((res) => {\n                  if (res) {\n                    history.replace(\"/order_placed_page\");\n                  }\n                });\n            }\n          });\n      } else {\n       console.log(\"Your are not logged in.\");\n      }\n    }\n  };\n\n  return (\n    <div className=\"shoppingcart container\">\n      <h4>Here's What You're Getting!</h4>\n      <hr></hr>\n      <h6>You have {basket.length} items in your order.</h6>\n      {basket.length > 0 ? (\n        <>\n          <Table responsive>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Description</th>\n                <th>Price</th>\n                <th>Updater</th>\n              </tr>\n            </thead>\n            {basket.map((each) => {\n              return <ShoppingItem key={each.Prod_id} cartItem={each} />;\n            })}\n          </Table>\n          <CurrencyFormat\n            renderText={(value) => (\n              <h5>\n                <strong>Order Total: {value}</strong>\n              </h5>\n            )}\n            decimalScale={2}\n            value={CalculateTotal(basket)}\n            displayType={\"text\"}\n            thousandSeparator={true}\n            prefix={\"₹\"}\n          />\n          <div\n            className=\"container\"\n            style={{\n              marginTop: 40,\n            }}\n          >\n            <Button onClick={handleGetDefaultAddress}>\n              Get Default Address\n            </Button>\n            <Form>\n              <Form.Group>\n                <Row>\n                  <Col>\n                    <Form.Label>First Name</Form.Label>\n                    <Form.Control\n                      defaultValue={firstName}\n                      onChange={(e) => setFirstName(e.target.value)}\n                      type=\"text\"\n                      placeholder=\"Enter First Name\"\n                      required\n                    />\n                  </Col>\n                  <Col>\n                    <Form.Label>Last Name</Form.Label>\n                    <Form.Control\n                      value={lastName}\n                      onChange={(e) => setLastName(e.target.value)}\n                      type=\"text\"\n                      placeholder=\"Enter Last Name\"\n                      required\n                    />\n                  </Col>\n                </Row>\n              </Form.Group>\n              <Form.Group>\n                <Form.Label>Address</Form.Label>\n                <Form.Control\n                  defaultValue={address}\n                  onChange={(e) => setAddress(e.target.value)}\n                  type=\"text\"\n                  placeholder=\"Enter Address\"\n                  required\n                />\n              </Form.Group>\n\n              <Row>\n                <Col>\n                  <Form.Group>\n                    <Form.Label>City</Form.Label>\n                    <Form.Control\n                      value={city}\n                      onChange={(e) => setCity(e.target.value)}\n                      type=\"text\"\n                      placeholder=\"Enter City\"\n                      required\n                    />\n                  </Form.Group>\n                </Col>\n                <Col>\n                  <Form.Group>\n                    <Form.Label>State</Form.Label>\n                    <Form.Control\n                      defaultValue={state}\n                      onChange={(e) => setState(e.target.value)}\n                      type=\"text\"\n                      placeholder=\"Enter State\"\n                      required\n                    />\n                  </Form.Group>\n                </Col>\n              </Row>\n\n              <Row>\n                <Col>\n                  <Form.Group>\n                    <Form.Label>PinCode</Form.Label>\n                    <Form.Control\n                      defaultValue={pinCode}\n                      onChange={(e) => setPincode(e.target.value)}\n                      type=\"number\"\n                      placeholder=\"Enter Pincode\"\n                      required\n                    />\n                  </Form.Group>\n                </Col>\n                <Col>\n                  <Form.Group>\n                    <Form.Label>Phone</Form.Label>\n                    <Form.Control\n                      defaultValue={phone}\n                      onChange={(e) => setPhone(e.target.value)}\n                      type=\"tel\"\n                      placeholder=\"123-427-477\"\n                      required\n                    />\n                  </Form.Group>\n                </Col>\n              </Row>\n              <br></br>\n              <Button type=\"submit\" variant=\"success\" onClick={handleOrderNow}>\n                Order Now\n              </Button>\n            </Form>\n          </div>\n        </>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nexport default ShoppingCart;\n","F:\\ecommerc\\Frontend\\src\\components\\Orderplaced\\OrderPlaced.js",["102"],"F:\\ecommerc\\Frontend\\src\\components\\Orders\\Order.js",["103","104","105"],"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useStateValue } from \"../../StateProvider\";\nimport OrderSingleItem from \"./OrderSingleItem\";\n\n\nfunction Order() {\n  const [{ apiKey, user, basket }, dispatch] = useStateValue();\n  const [orders, setOrders] = useState([]);\n  \n  useEffect(() => {\n    getOrder();\n  }, [user]);\n\n  const getOrder = () => {\n    axios\n      .post(`${apiKey}/recent_orders`, {\n        user: user?.Email,\n      })\n      .then((res) => {\n        setOrders(res.data);\n      });\n  };\n  useEffect(() => {\n    let checkUser = setTimeout(() => {\n      if (!user) {\n        console.log(\"Please Login In to View Your Orders\");\n      }\n    }, 1000);\n    return () => {\n      clearTimeout(checkUser);\n    };\n  }, [user]);\n\n  const deleteOrder = (uuidOrder) => {\n    getOrder();\n    if (orders.length === 1) {\n      setOrders([]);\n    }\n  };\n\n  return (\n    <div className=\"orders container\">\n      <div>\n        <br></br>\n        <h4>Your Orders</h4>\n        <br></br>\n        {console.log(orders)}\n        {orders.map((each) => {\n          console.log(each.Order_uuid);\n          return (\n            <OrderSingleItem\n              triggerOrderItem={deleteOrder}\n              key={each.Order_uuid}\n              order={each}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Order;\n","F:\\ecommerc\\Frontend\\src\\components\\ShoppingCart\\ShoppingItem.js",["106"],"import axios from \"axios\";\nimport React from \"react\";\nimport { Button, Table } from \"react-bootstrap\";\nimport { useStateValue } from \"../../StateProvider\";\nimport \"./ShoppingItemStyles.css\";\n\nfunction ShoppingItem({ cartItem }) {\n  const [{ apiKey, user }, dispatch] = useStateValue();\n\n  const handleRemoveFromCart = (e) => {\n    e.preventDefault();\n    dispatch({\n      type: \"REMOVE_FROM_BASKET\",\n      id: cartItem.UUID,\n    });\n    axios\n      .post(`${apiKey}/remove_from_cart`, {\n        cartItem: cartItem.Prod_id,\n        user: user.Email,\n        uuid: cartItem?.UUID || cartItem?.uuid,\n      })\n      .then((res) => {});\n  };\n\n  return (\n    <tbody>\n      {console.log(cartItem)}\n      <tr>\n        <td>\n          <img\n            className=\"shoppingitem__img\"\n            alt=\"img\"\n            src={cartItem.Prod_img_url}\n          />\n        </td>\n        <td>{cartItem.Prod_name}</td>\n        <td>Rs. {cartItem.Prod_price}</td>\n        <td>\n          <Button variant=\"dark\" onClick={handleRemoveFromCart}>\n            Remove\n          </Button>\n        </td>\n      </tr>\n    </tbody>\n  );\n}\n\nexport default ShoppingItem;\n","F:\\ecommerc\\Frontend\\src\\components\\Orders\\OrderSingleItem.js",["107","108","109"],"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Table } from \"react-bootstrap\";\nimport { useStateValue } from \"../../StateProvider\";\nimport \"./OrderSingleItem.css\";\nimport moment from \"moment\";\nimport CurrencyFormat from \"react-currency-format\";\n\nfunction OrderSingleItem({ order, triggerOrderItem }) {\n  const [{ apiKey, user }, dispatch] = useStateValue();\n\n  const handleCancel = (e) => {\n    e.preventDefault();\n    axios\n      .post(`${apiKey}/cancelOrder`, {\n        user: user?.Email,\n        uuid: order.Order_uuid,\n      })\n      .then((res) => {\n        triggerOrderItem(order.Order_uuid);\n      });\n  };\n\n  return (\n    <div className=\"ordersingleitem container\">\n      <div className=\"ordersingleitem__gray\">\n        <div className=\"ordersingleitem__left\">\n          <p>\n            <strong>ORDER PLACED</strong> <br></br>\n            {moment(order.Order_date).format(\"DD/MM/YYYY hh:mm:ss\")}\n          </p>\n          <p>\n            <strong>TOTAL</strong>\n            <CurrencyFormat\n              renderText={(value) => <p style={{ marginBottom: 0 }}>{value}</p>}\n              decimalScale={2}\n              value={order.Order_price}\n              displayType={\"text\"}\n              thousandSeparator={true}\n              prefix={\"₹\"}\n            />\n          </p>\n          <p>\n            <strong>SHIP TO</strong>\n            <br></br>\n            <div className=\"orderSingleItem__address\">\n              <p>{order?.address}</p>\n              <p>{order?.City}</p>\n              <p>{order?.State}</p>\n              <p>{order?.Pincode}</p>\n              <p>Phone: {order?.Phone}</p>\n            </div>\n          </p>\n        </div>\n        <p>\n          <strong>ORDER ID</strong>\n          <br></br>\n          {order.Order_uuid}\n        </p>\n      </div>\n      <div className=\"ordersingleitem__main\">\n        <Table style={{ width: \"80%\", margin: \"auto\" }}>\n          <thead>\n            <tr>\n              <th>Image</th>\n              <th>Name</th>\n\n              <th>Price</th>\n            </tr>\n          </thead>\n          {Array(order?.prod_ids.length)\n            .fill()\n            .map((_, i) => {\n              return (\n                <tbody key={i}>\n                  <tr>\n                    <td>\n                      <img\n                        className=\"ordersingleitem__main__img\"\n                        src={order.prod_imgs[i]}\n                        alt=\"img\"\n                      />\n                    </td>\n                    <td>{order.prod_names[i]}</td>\n\n                    <td>\n                      <CurrencyFormat\n                        renderText={(value) => (\n                          <p style={{ marginBottom: 0 }}>{value}</p>\n                        )}\n                        decimalScale={2}\n                        value={order.prod_prices[i]}\n                        displayType={\"text\"}\n                        thousandSeparator={true}\n                        prefix={\"₹\"}\n                      />\n                    </td>\n                  </tr>\n                </tbody>\n              );\n            })}\n        </Table>\n        <hr style={{ margin: 0 }}></hr>\n        <div className=\"container ordersingleitem__main__total\">\n          <Button\n            style={{ marginRight: 10 }}\n            onClick={handleCancel}\n            variant=\"danger\"\n          >\n            Cancel Order\n          </Button>\n          <strong>Order Has Been Received!</strong>\n        </div>\n      </div>\n      <br></br>\n    </div>\n  );\n}\n\nexport default OrderSingleItem;\n","F:\\ecommerc\\Frontend\\src\\components\\Products\\Products.js",["110","111","112","113","114","115"],"import React, { useState, useEffect } from \"react\";\nimport \"./ProductsStyles.css\";\nimport { Card, Row, Col } from \"react-bootstrap\";\nimport { useStateValue } from \"../../StateProvider\";\nimport axios from \"axios\";\n\nfunction Products(props) {\n  const [{ apiKey }, dispatch] = useStateValue();\n\n  const handleAddToCart = (e) => {\n    e.preventDefault();\n    console.log(props.prod_id);\n    axios\n      .post(`${apiKey}/add_to_cart`, {\n        prodid: props.Prod_id,\n      })\n      .then((res) => {\n        console.log(res);\n      })\n      .then((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <Card style={{ width: \"200px\" }}>\n      <Card.Img variant=\"top\" src={props.Prod_img_url} />\n      <Card.Body>\n        <Card.Title> {props.Prod_name}</Card.Title>\n        <Card.Text>₹{props.Prod_price}</Card.Text>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default Products;\n",{"ruleId":"116","severity":1,"message":"117","line":18,"column":36,"nodeType":"118","messageId":"119","endLine":18,"endColumn":42},{"ruleId":"120","severity":1,"message":"121","line":43,"column":6,"nodeType":"122","endLine":43,"endColumn":8,"suggestions":"123"},{"ruleId":"116","severity":1,"message":"124","line":46,"column":11,"nodeType":"118","messageId":"119","endLine":46,"endColumn":23},{"ruleId":"120","severity":1,"message":"125","line":56,"column":6,"nodeType":"122","endLine":56,"endColumn":12,"suggestions":"126"},{"ruleId":"116","severity":1,"message":"127","line":67,"column":11,"nodeType":"118","messageId":"119","endLine":67,"endColumn":28},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":10,"column":21,"nodeType":"134","messageId":"135","endLine":10,"endColumn":23},{"ruleId":"116","severity":1,"message":"136","line":5,"column":10,"nodeType":"118","messageId":"119","endLine":5,"endColumn":14},{"ruleId":"116","severity":1,"message":"137","line":9,"column":22,"nodeType":"118","messageId":"119","endLine":9,"endColumn":30},{"ruleId":"120","severity":1,"message":"138","line":15,"column":6,"nodeType":"122","endLine":15,"endColumn":8,"suggestions":"139"},{"ruleId":"120","severity":1,"message":"138","line":18,"column":6,"nodeType":"122","endLine":18,"endColumn":8,"suggestions":"140"},{"ruleId":"116","severity":1,"message":"137","line":15,"column":22,"nodeType":"118","messageId":"119","endLine":15,"endColumn":30},{"ruleId":"116","severity":1,"message":"141","line":1,"column":27,"nodeType":"118","messageId":"119","endLine":1,"endColumn":36},{"ruleId":"116","severity":1,"message":"142","line":2,"column":16,"nodeType":"118","messageId":"119","endLine":2,"endColumn":22},{"ruleId":"116","severity":1,"message":"143","line":7,"column":20,"nodeType":"118","messageId":"119","endLine":7,"endColumn":28},{"ruleId":"116","severity":1,"message":"144","line":3,"column":18,"nodeType":"118","messageId":"119","endLine":3,"endColumn":22},{"ruleId":"116","severity":1,"message":"117","line":11,"column":12,"nodeType":"118","messageId":"119","endLine":11,"endColumn":18},{"ruleId":"116","severity":1,"message":"145","line":12,"column":10,"nodeType":"118","messageId":"119","endLine":12,"endColumn":18},{"ruleId":"116","severity":1,"message":"146","line":12,"column":20,"nodeType":"118","messageId":"119","endLine":12,"endColumn":31},{"ruleId":"120","severity":1,"message":"138","line":31,"column":6,"nodeType":"122","endLine":31,"endColumn":12,"suggestions":"147"},{"ruleId":"116","severity":1,"message":"137","line":6,"column":20,"nodeType":"118","messageId":"119","endLine":6,"endColumn":28},{"ruleId":"116","severity":1,"message":"117","line":8,"column":26,"nodeType":"118","messageId":"119","endLine":8,"endColumn":32},{"ruleId":"116","severity":1,"message":"137","line":8,"column":36,"nodeType":"118","messageId":"119","endLine":8,"endColumn":44},{"ruleId":"120","severity":1,"message":"148","line":13,"column":6,"nodeType":"122","endLine":13,"endColumn":12,"suggestions":"149"},{"ruleId":"116","severity":1,"message":"150","line":3,"column":18,"nodeType":"118","messageId":"119","endLine":3,"endColumn":23},{"ruleId":"116","severity":1,"message":"141","line":2,"column":17,"nodeType":"118","messageId":"119","endLine":2,"endColumn":26},{"ruleId":"116","severity":1,"message":"151","line":2,"column":28,"nodeType":"118","messageId":"119","endLine":2,"endColumn":36},{"ruleId":"116","severity":1,"message":"137","line":10,"column":28,"nodeType":"118","messageId":"119","endLine":10,"endColumn":36},{"ruleId":"116","severity":1,"message":"151","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":25},{"ruleId":"116","severity":1,"message":"141","line":1,"column":27,"nodeType":"118","messageId":"119","endLine":1,"endColumn":36},{"ruleId":"116","severity":1,"message":"152","line":3,"column":16,"nodeType":"118","messageId":"119","endLine":3,"endColumn":19},{"ruleId":"116","severity":1,"message":"153","line":3,"column":21,"nodeType":"118","messageId":"119","endLine":3,"endColumn":24},{"ruleId":"116","severity":1,"message":"137","line":8,"column":22,"nodeType":"118","messageId":"119","endLine":8,"endColumn":30},{"ruleId":"116","severity":1,"message":"154","line":10,"column":9,"nodeType":"118","messageId":"119","endLine":10,"endColumn":24},"no-unused-vars","'basket' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'activePage', 'apiKey', and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["155"],"'cartProducts' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'apiKey' and 'dispatch'. Either include them or remove the dependency array.",["156"],"'newProductRequest' is assigned a value but never used.","no-native-reassign",["157"],"no-negated-in-lhs",["158"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Card' is defined but never used.","'dispatch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'apiKey'. Either include it or remove the dependency array.",["159"],["160"],"'useEffect' is defined but never used.","'Button' is defined but never used.","'products' is assigned a value but never used.","'Form' is defined but never used.","'quantity' is assigned a value but never used.","'setQuantity' is assigned a value but never used.",["161"],"React Hook useEffect has a missing dependency: 'getOrder'. Either include it or remove the dependency array.",["162"],"'Table' is defined but never used.","'useState' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'handleAddToCart' is assigned a value but never used.",{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},"no-global-assign","no-unsafe-negation",{"desc":"167","fix":"168"},{"desc":"167","fix":"169"},{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},"Update the dependencies array to be: [activePage, apiKey, dispatch]",{"range":"174","text":"175"},"Update the dependencies array to be: [apiKey, dispatch, user]",{"range":"176","text":"177"},"Update the dependencies array to be: [apiKey]",{"range":"178","text":"179"},{"range":"180","text":"179"},"Update the dependencies array to be: [apiKey, user]",{"range":"181","text":"182"},"Update the dependencies array to be: [getOrder, user]",{"range":"183","text":"184"},[1586,1588],"[activePage, apiKey, dispatch]",[1860,1866],"[apiKey, dispatch, user]",[509,511],"[apiKey]",[716,718],[1084,1090],"[apiKey, user]",[354,360],"[getOrder, user]"]